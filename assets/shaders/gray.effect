CCEffect %{
  techniques:
  - name: opaque
    passes:
    - vert: legacy/main-functions/general-vs:vert
      frag: gray-fs:frag
      properties: &props
        mainTexture:    { value: white }
        mainColor:      { value: [1, 1, 1, 1], editor: { type: color } }
        grayEffect:     { value: 0.0 } # 0 = 彩色，1 = 黑白
  - name: transparent
    passes:
    - vert: legacy/main-functions/general-vs:vert
      frag: gray-fs:frag
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendSrcAlpha: src_alpha
          blendDstAlpha: one_minus_src_alpha
      properties: *props
}%

CCProgram gray-fs %{
  precision highp float;
  #include <legacy/output>
  #include <legacy/fog-fs>

  in vec2 v_uv;
  in vec3 v_position;

  uniform sampler2D mainTexture;

  uniform Constant {
    vec4 mainColor;
    float grayEffect;
  };

  vec4 frag () {
    vec4 color = mainColor * texture(mainTexture, v_uv);
    float gray = dot(color.rgb, vec3(0.3, 0.59, 0.11));
    vec3 finalColor = mix(color.rgb, vec3(gray), grayEffect); // 根據 grayEffect 混合
    vec4 result = vec4(finalColor, color.a);
    CC_APPLY_FOG(result, v_position);
    return CCFragOutput(result);
  }
}%